<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,oFPS);
global.upKey = vk_up;
global.rightKey = vk_right;
global.downKey = vk_down;
global.leftKey = vk_left;
global.restartKey = ord('R');
global.selectKey = vk_enter;
global.menuKey = vk_escape;
global.displayFPS = false;
global.soundEffectVolume = 0.5;

global.childsetting = false;
global.deltaT = (30/1000000)*delta_time;
display_reset(0,true)
global.showlevelbanner = true;
global.playerDeaths = 0;
global.levelDeaths = ds_map_create();
index = 0;
while(index  &lt;= room_last){
    if(room_exists(index)){
        if(string_count("rm",room_get_name(index)) &gt; 0){
            ds_map_add(global.levelDeaths,get_room_name(room_get_name(index)),0);
        }
    }
    index++;
}


global.bestlvltimes = ds_map_create();
index = 0;
while(index  &lt;= room_last){
    if(room_exists(index)){
        if(string_count("rm",room_get_name(index)) &gt; 0){
            ds_map_add(global.bestlvltimes,get_room_name(room_get_name(index)),9999999)
        }
    }
    index++;
}


global.roomstars = ds_map_create();
index = 0;
while(index  &lt;= room_last){
    if(room_exists(index)){
        if(string_count("rm",room_get_name(index)) &gt; 0){
            ds_map_add(global.roomstars,get_room_name(room_get_name(index)),0)
        }
    }
    index++;
}
/*ds_map_replace(global.roomstars,"[6] Blocks",2);
ds_map_replace(global.roomstars,"[4] Snake",3);
ds_map_replace(global.roomstars,"[1] Dirt",1);
*/
vheight = 300;
aspectRatio = display_get_width()/display_get_height();
vwidth = round(vheight*aspectRatio);
if (vwidth &amp; 1)
vwidth++;
for(i=0;i&lt;=room_last;i++) {
    if room_exists(i){
    room_set_view(i,0,true,0,0,vwidth,vheight,0,0,vwidth,vheight,(vwidth/2)-15,(vheight/2)-15,-1,-1,oPlayer)
    room_set_view_enabled(i,true);
    }
}
//view_wview[view_current] = display_get_width()*300/display_get_height();
//view_hborder = (view_wview[view_current]/2)-20
surface_resize(application_surface,vwidth,vheight);
display_set_gui_size(vwidth,vheight);
window_set_size(vwidth,vheight)
room_goto(MENU);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surface)){
    //show_error("",0);
    //room_set_view_enabled(room,0);
    draw_surface_stretched(surface, 0, 0, display_get_gui_width(), display_get_gui_height());
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surface)){
    
    surface = surface_create(view_wview[0],view_hview[0]);
    view_surface_id[0] = surface;
    //show_error(""+string(view_current),0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
