<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSidebar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show = false;
spd = 0;
shownext = 0;
x = room_width+1;
rm = -1;
stage = 0;
color = c_lime;
if (room = LEVELSELECT1) {
    stage = 20;
    sprite_index = sSidebarMetal;
    color = c_black;
} else if(room = LEVELSELECT2) {
    stage = 40
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (show == 1) {
    if (x &gt;= room_width/2+60) {
        spd -= 20*(delta/2);
    } else {
    spd = 0;
    x = room_width/2;
    }
}
if (show == 0) {
    if (x &lt;= room_width+1) {
        spd += 20*(delta/2);
    } else {
    spd = 0;
    x = room_width+1;
    }
}
repeat(abs(spd)){
    if ((x &lt;= room_width+1) &amp;&amp; (x &gt;= room_width/2+60)){
        x += sign(spd);
        if (x &gt; room_width+1){
            x = room_width+1;
        }
        if (x &lt; room_width/2+60){
            x = room_width/2+60;
        }
    }
}

if (shownext == 1 &amp;&amp; show == 0 &amp;&amp; !(alarm[0] &gt; 0)){
    shownext = 0;
    alarm[0] = 7;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_self();
draw_set_color(color); 
if (show = true){
    draw_text(x+103,45,get_room_name("rm"+string(stage+oLevelSelectControl.lastmoused)));
var rmAsset = asset_get_index("sRm"+string(stage+oLevelSelectControl.lastmoused))
if (rmAsset == -1){
    rmAsset = sRmNotAvailable;
}
  
    draw_sprite(rmAsset,0,x+103,115); 


    draw_rectangle(x+103-sprite_get_width(rmAsset)/2,115-sprite_get_height(sRm1)/2,x+103+sprite_get_width(sRm1)/2,115+sprite_get_height(sRm1)/2,1);
    draw_rectangle(x+102-sprite_get_width(rmAsset)/2,114-sprite_get_height(rmAsset)/2,x+104+sprite_get_width(rmAsset)/2,116+sprite_get_height(rmAsset)/2,1);
if !(ds_map_find_value(global.bestlvltimes,get_room_name("rm"+string(stage+oLevelSelectControl.lastmoused))) &gt; 99999){ 
    draw_text(x+103,215,"BEST TIME: "+string(ds_map_find_value(global.bestlvltimes,get_room_name("rm"+string(stage+oLevelSelectControl.lastmoused)))));
} else {
    draw_text(x+103,215,"NOT YET BEATEN");
}


for(i = 0; i &lt; 3;i++){
    if (ds_map_exists(global.roomstars,get_room_name("rm"+string(stage+oLevelSelectControl.lastmoused)))){
            if (i &lt; ds_map_find_value(global.roomstars,get_room_name("rm"+string(stage+oLevelSelectControl.lastmoused)))){
                draw_sprite(sStarLarge,2,x+70+i*33,y+190);
            }
            else {
               draw_sprite(sStarLarge,3,x+70+i*33,y+190);
            }
        }
        else {
            draw_sprite(sStarLarge,3,x+70+i*33,y+190);
        }
    }
}
draw_set_halign(fa_left);
//draw_text(0,0,string(show)+" "+string(spd));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
